<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!-- Generic DAO - can be used when doing standard CRUD -->
    <bean id="dao" class="com.kenoah.base.dao.hibernate.BaseDAOHibernate">
        <property name="sessionFactory" ref="knSessionFactory"/>
        <property name="useBackwardCompatibleIsNewObject" value="true" />
    </bean>

    <bean id="daoFixed" class="com.kenoah.base.dao.hibernate.BaseDAOHibernate">
        <property name="sessionFactory" ref="knSessionFactory"/>
        <property name="useBackwardCompatibleIsNewObject" value="false" />
    </bean>
    
    <bean id="ReadOnlyDAO" class="com.kenoah.base.dao.hibernate.ReadOnlyDAOHibernate">
        <property name="sessionManager" ref="sessionManager"/>
        <property name="hibernateTemplate" ref="ReadOnlyHibernateTemplate"/>
        <property name="jdbcTemplate" ref="readOnlyJdbcTemplate" />
    </bean>
    <bean id="ReadOnlyConnectionDataSource" class="com.kenoah.base.dao.hibernate.ReadOnlyConnectionDataSource">
		<property name="dataSource" ref="readOnlyDataSource" />
	</bean>
    <bean id="ReadOnlyHibernateTemplate" class="com.kenoah.base.dao.hibernate.ReadOnlyHibernateTemplate">
        <property name="sessionFactory" ref="knSessionFactory"/>
        <property name="dataSource" ref="ReadOnlyConnectionDataSource"/>
    </bean>
	<bean id="readOnlyJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="ReadOnlyConnectionDataSource" />
	</bean>
</beans>
